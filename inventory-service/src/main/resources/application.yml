service:
  name: ${spring.application.name}
  host: ${SERVICE_HOST:localhost}
  registration:
    ttl-seconds: 30

server:
  port: ${SERVER_PORT:8084}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  application:
    name: inventory-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:inventory_db}
    username: ${DB_USERNAME:inventory_user}
    password: ${DB_PASSWORD:inventory_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
    consumer:
      group-id: inventory-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-commit-interval: 1000
  cache:
    type: redis
    redis:
      time-to-live: 1800000 # 30 minutes
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours
  kafka:
    topics:
      inventory-reserved: inventory-reserved
      inventory-released: inventory-released
      inventory-confirmed: inventory-confirmed
      inventory-adjusted: inventory-adjusted
      low-stock-alert: low-stock-alert
  service-registry:
    ttl: ${SERVICE_REGISTRY_TTL:60} # seconds
    refresh-interval: ${SERVICE_REGISTRY_REFRESH:30} # seconds

logging:
  level:
    com.bits.inventory: ${LOG_LEVEL:INFO}
    org.springframework.kafka: WARN
    org.springframework.data.redis: WARN
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/inventory-service.log
    max-size: 10MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      service: inventory-service
      podname: ${HOSTNAME:unknown}

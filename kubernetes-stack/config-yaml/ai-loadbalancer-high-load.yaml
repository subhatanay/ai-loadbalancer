apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-loadbalancer-high-load
  namespace: ai-loadbalancer
  labels:
    app: ai-loadbalancer-high-load
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-loadbalancer-high-load
  template:
    metadata:
      labels:
        app: ai-loadbalancer-high-load
    spec:
      containers:
      - name: ai-loadbalancer
        image: subhajgh/ai-loadbalancer:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_HOST
          value: "redis.ai-loadbalancer.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: PROMETHEUS_HOST
          value: "prometheus-service.ai-loadbalancer.svc.cluster.local"
        - name: PROMETHEUS_PORT
          value: "9090"
        - name: USER_SERVICE_URL
          value: "http://user-service.ai-loadbalancer.svc.cluster.local:8081"
        - name: CART_SERVICE_URL
          value: "http://cart-service.ai-loadbalancer.svc.cluster.local:8082"
        - name: ORDER_SERVICE_URL
          value: "http://order-service.ai-loadbalancer.svc.cluster.local:8083"
        - name: INVENTORY_SERVICE_URL
          value: "http://inventory-service.ai-loadbalancer.svc.cluster.local:8084"
        - name: PAYMENT_SERVICE_URL
          value: "http://payment-service.ai-loadbalancer.svc.cluster.local:8085"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service.ai-loadbalancer.svc.cluster.local:8086"
        - name: RL_COLLECTOR_ENABLED
          value: "true"
        - name: LOAD_BALANCER_ROUTING_STRATEGY
          value: "round-robin"
        - name: SERVER_PORT
          value: "8080"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      - name: rl-agent
        image: subhajgh/ai-loadbalancer-rl-agent:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8088
        env:
        - name: RL_AGENT_PROMETHEUS_HOST
          value: "prometheus-service.ai-loadbalancer.svc.cluster.local"
        - name: RL_AGENT_PROMETHEUS_PORT
          value: "9090"
        - name: RL_AGENT_LOADBALANCER_HOST
          value: "localhost"
        - name: RL_AGENT_LOADBALANCER_PORT
          value: "8080"
        - name: RL_AGENT_LOG_LEVEL
          value: "INFO"
        livenessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: ai-loadbalancer-high-load-service
  namespace: ai-loadbalancer
  labels:
    app: ai-loadbalancer-high-load
spec:
  type: ClusterIP
  ports:
  - name: loadbalancer
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: rl-agent
    port: 8088
    targetPort: 8088
    protocol: TCP
  selector:
    app: ai-loadbalancer-high-load
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-loadbalancer-high-load-hpa
  namespace: ai-loadbalancer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-loadbalancer-high-load
  minReplicas: 3
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
